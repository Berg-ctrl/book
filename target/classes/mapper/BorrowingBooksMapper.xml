<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="book.mapper.BorrowingBooksMapper">
  <resultMap id="BaseResultMap" type="book.domain.BorrowingBooks">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="book_id" jdbcType="INTEGER" property="book_id" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="true_back_date" jdbcType="DATE" property="true_back_date" />
    <result column="should_back_date" jdbcType="DATE" property="should_back_date" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, book_id, date, true_back_date, should_back_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from borrowingbooks
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from borrowingbooks
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertBorrowingRecord" parameterType="book.domain.BorrowingBooks">
    insert into borrowingbooks (id, user_id, book_id, 
      date, true_back_date, should_back_date
      )
    values (#{id,jdbcType=INTEGER}, #{user_id,jdbcType=INTEGER}, #{book_id,jdbcType=INTEGER}, 
      #{date,jdbcType=DATE}, #{true_back_date,jdbcType=DATE}, #{should_back_date,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="book.domain.BorrowingBooks">
    insert into borrowingbooks
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="book_id != null">
        book_id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="true_back_date != null">
        true_back_date,
      </if>
      <if test="should_back_date != null">
        should_back_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="book_id != null">
        #{book_id,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="true_back_date != null">
        #{true_back_date,jdbcType=DATE},
      </if>
      <if test="should_back_date != null">
        #{should_back_date,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="book.domain.BorrowingBooks">
    update borrowingbooks
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="book_id != null">
        book_id = #{book_id,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="true_back_date != null">
        true_back_date = #{true_back_date,jdbcType=DATE},
      </if>
      <if test="should_back_date != null">
        should_back_date = #{should_back_date,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>